{
    "pipes": [],
    "interfaces": [
        {
            "name": "Breadcrumb",
            "id": "interface-Breadcrumb-d135db33b13645bde8d81c598998101d",
            "file": "src/app/internal/breadcrumbs/model/breadcrumb.ts",
            "type": "interface",
            "sourceCode": "export interface Breadcrumb {\n  title: string;\n  routerLink: string;\n  isActive?: boolean;\n}\n",
            "properties": [
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "routerLink",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Button",
            "id": "interface-Button-44a6183cea4c279daf48bc3bbaacb081",
            "file": "src/app/internal/button/model/button.ts",
            "type": "interface",
            "sourceCode": "export interface Button {\n  type?: string;\n  value: string;\n}\n",
            "properties": [
                {
                    "name": "type",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Env",
            "id": "interface-Env-cafad3ee37cd40aab572b5f24ee1ff20",
            "file": "src/environments/env.ts",
            "type": "interface",
            "sourceCode": "export interface Env {\n  production: boolean;\n  baseUrl: string;\n}\n",
            "properties": [
                {
                    "name": "baseUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "production",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "GenerationMix",
            "id": "interface-GenerationMix-a04483ce1ce670f848ac07427a9d9050",
            "file": "src/app/model/generation-mix.ts",
            "type": "interface",
            "sourceCode": "export interface GenerationMix {\n  fuel: string;\n  perc: string;\n}\n",
            "properties": [
                {
                    "name": "fuel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "perc",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Intensity",
            "id": "interface-Intensity-908c1ff50795fc0bc21b81d9c4485ce7",
            "file": "src/app/model/intensity.ts",
            "type": "interface",
            "sourceCode": "export interface Intensity {\n  forecast: number;\n  actual?: number;\n  index: string;\n}\n",
            "properties": [
                {
                    "name": "actual",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "forecast",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "index",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IntensityData",
            "id": "interface-IntensityData-ee90732bfb346e1cd4b3c312abf79b32",
            "file": "src/app/model/intensity-data.ts",
            "type": "interface",
            "sourceCode": "import { GenerationMix } from './generation-mix';\nimport { Intensity } from './intensity';\n\nexport interface IntensityData {\n  from: string;\n  to: string;\n  intensity: Intensity;\n  generationmix: GenerationMix;\n}\n",
            "properties": [
                {
                    "name": "from",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "generationmix",
                    "type": "GenerationMix",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "intensity",
                    "type": "Intensity",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "to",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Region",
            "id": "interface-Region-56e2c86a3003cc3cb6fe5b7fbf5a8e2c",
            "file": "src/app/model/region.ts",
            "type": "interface",
            "sourceCode": "import { IntensityData } from './intensity-data';\n\nexport interface Region {\n  regionid: number;\n  dnoregion: string;\n  shortname: string;\n  postcode: string;\n  data: IntensityData[];\n}\n",
            "properties": [
                {
                    "name": "data",
                    "type": "IntensityData[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "dnoregion",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "postcode",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "regionid",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "shortname",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ResponseData",
            "id": "interface-ResponseData-8d5eb79710e2c74ee4eadf570d4c3d61",
            "file": "src/app/model/response-data.ts",
            "type": "interface",
            "sourceCode": "export interface ResponseData<T> {\n  data: T[];\n}\n",
            "properties": [
                {
                    "name": "data",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "TextInput",
            "id": "interface-TextInput-a59f395a46d4e7edb9c4a2196a59f24a",
            "file": "src/app/internal/text-input/model/text-input.ts",
            "type": "interface",
            "sourceCode": "export interface TextInput {\n  type: string;\n  placeholder: string;\n  label: string;\n  formControlName: string;\n}\n",
            "properties": [
                {
                    "name": "formControlName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "RegionalService",
            "id": "injectable-RegionalService-722c220dcc890afeeb621cfd9624fadc",
            "file": "src/app/service/regional.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getRegionByPostcode",
                    "args": [
                        {
                            "name": "postcode",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResponseData<Region>>",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "postcode",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { REGIONAL_URL } from '../config/regional-url.injector';\nimport { Region } from '../model/region';\nimport { ResponseData } from '../model/response-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegionalService {\n  constructor(\n    private _httpClient: HttpClient,\n    @Inject(REGIONAL_URL) private _regionalUrl: string\n  ) {}\n\n  getRegionByPostcode(postcode: string): Observable<ResponseData<Region>> {\n    return this._httpClient.get<ResponseData<Region>>(\n      this._regionalUrl + '/postcode/' + postcode\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_httpClient",
                        "type": "HttpClient"
                    },
                    {
                        "name": "_regionalUrl",
                        "type": "string"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_httpClient",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_regionalUrl",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1e4d379814e998ba784513d6a2cf232e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "BreadcrumbsComponent",
            "id": "component-BreadcrumbsComponent-a4beefb8c03a69e9a15763c74f017796",
            "file": "src/app/internal/breadcrumbs/breadcrumbs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumbs",
            "styleUrls": [
                "./breadcrumbs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumbs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "breadcrumbs",
                    "defaultValue": "[]",
                    "line": 10,
                    "type": "Breadcrumb[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Breadcrumb } from './model/breadcrumb';\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n})\nexport class BreadcrumbsComponent {\n  @Input() breadcrumbs: Breadcrumb[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./breadcrumbs.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nav class=\"breadcrumb is-medium\" aria-label=\"breadcrumbs\">\n  <ul>\n    <ng-container *ngFor=\"let crumb of breadcrumbs\">\n      <li *ngIf=\"!crumb.isActive\">\n        <a class=\"crumb\" routerLink=\"{{ crumb.routerLink }}\">{{\n          crumb.title\n          }}</a>\n      </li>\n      <li *ngIf=\"crumb.isActive\" class=\"is-active\">\n        <a\n          class=\"crumb-active\"\n          aria-current=\"page\"\n          routerLink=\"{{ crumb.routerLink }}\"\n        >{{ crumb.title }}</a\n        >\n      </li>\n    </ng-container>\n  </ul>\n</nav>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-2120c2a7368f5cf2a61824dd1afc9d6b",
            "file": "src/app/internal/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "button",
                    "defaultValue": "{ type: '', value: '' }",
                    "line": 12,
                    "type": "Button"
                },
                {
                    "name": "parentForm",
                    "defaultValue": "new FormGroup({})",
                    "line": 11,
                    "type": "FormGroup"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport type { Button } from './model/button';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n  @Input() parentForm: FormGroup = new FormGroup({});\n  @Input() button: Button = { type: '', value: '' };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"button is-primary\" [type]=\"button.type\">\n  {{ button.value }}\n</button>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-133c91a2a55cb53ee1c44e4d71056f96",
            "file": "src/app/internal/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "templateData": "<nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"navbar-brand\">\n    <a class=\"navbar-item\" routerLink=\"/home\">\n      <img src=\"../../../assets/logo.png\" alt=\"logo\"/>\n    </a>\n  </div>\n  <div class=\"navbar-menu\">\n    <div class=\"navbar-start\">\n      <a class=\"navbar-item\" routerLink=\"/home\"> Home </a>\n      <a class=\"navbar-item\" routerLink=\"/national\"> National </a>\n      <a class=\"navbar-item\" routerLink=\"/regional\"> Regional </a>\n    </div>\n    <div class=\"navbar-end\">\n      <div class=\"navbar-item\">\n        <div class=\"buttons\">\n          <div class=\"button is-link\">Sign Up</div>\n          <div class=\"button is-link is-light\">Login</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-b3cd29ccd9c763d2a9d25e225d1f591a",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_breadcrumbs",
                    "defaultValue": "[\n    {\n      title: 'Home',\n      routerLink: '/',\n      isActive: true,\n    },\n  ]",
                    "type": "Breadcrumb[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Breadcrumb } from '../internal/breadcrumbs/model/breadcrumb';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n  private readonly _breadcrumbs: Breadcrumb[] = [\n    {\n      title: 'Home',\n      routerLink: '/',\n      isActive: true,\n    },\n  ];\n\n  get breadcrumbs(): Breadcrumb[] {\n    return this._breadcrumbs;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "breadcrumbs": {
                    "name": "breadcrumbs",
                    "getSignature": {
                        "name": "breadcrumbs",
                        "type": "[]",
                        "returnType": "Breadcrumb[]",
                        "line": 18
                    }
                }
            },
            "templateData": "<app-header></app-header>\n<app-breadcrumbs [breadcrumbs]=\"breadcrumbs\"></app-breadcrumbs>\n"
        },
        {
            "name": "NationalComponent",
            "id": "component-NationalComponent-be23665166760459ed4df279cc2ff6c4",
            "file": "src/app/national/national.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-national",
            "styleUrls": [
                "./national.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./national.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_breadcrumbs",
                    "defaultValue": "[\n    {\n      title: 'Home',\n      routerLink: '/',\n    },\n    {\n      title: 'National',\n      routerLink: '/national',\n      isActive: true,\n    },\n  ]",
                    "type": "Breadcrumb[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        112,
                        132
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Breadcrumb } from '../internal/breadcrumbs/model/breadcrumb';\n\n@Component({\n  selector: 'app-national',\n  templateUrl: './national.component.html',\n  styleUrls: ['./national.component.scss'],\n})\nexport class NationalComponent {\n  private readonly _breadcrumbs: Breadcrumb[] = [\n    {\n      title: 'Home',\n      routerLink: '/',\n    },\n    {\n      title: 'National',\n      routerLink: '/national',\n      isActive: true,\n    },\n  ];\n\n  get breadcrumbs(): Breadcrumb[] {\n    return this._breadcrumbs;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./national.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "breadcrumbs": {
                    "name": "breadcrumbs",
                    "getSignature": {
                        "name": "breadcrumbs",
                        "type": "[]",
                        "returnType": "Breadcrumb[]",
                        "line": 22
                    }
                }
            },
            "templateData": "<app-header></app-header>\n<app-breadcrumbs [breadcrumbs]=\"breadcrumbs\"></app-breadcrumbs>\n"
        },
        {
            "name": "RegionalComponent",
            "id": "component-RegionalComponent-910704f1d2c950a40a43e28ebf761fbc",
            "file": "src/app/regional/regional.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-regional",
            "styleUrls": [
                "./regional.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./regional.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_breadcrumbs",
                    "defaultValue": "[\n    {\n      title: 'Home',\n      routerLink: '/',\n    },\n    {\n      title: 'Regional',\n      routerLink: '/regional',\n      isActive: true,\n    },\n  ]",
                    "type": "Breadcrumb[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_cancelButton",
                    "defaultValue": "{\n    type: 'reset',\n    value: 'Cancel',\n  }",
                    "type": "Button",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_postcodeInput",
                    "defaultValue": "{\n    type: 'text',\n    placeholder: 'Enter a postcode',\n    label: 'Postcode',\n    formControlName: 'postcode',\n  }",
                    "type": "TextInput",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "_submitButton",
                    "defaultValue": "{\n    type: 'submit',\n    value: 'Submit',\n  }",
                    "type": "Button",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        112,
                        132
                    ]
                },
                {
                    "name": "postcodeForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "onPostcodeSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Breadcrumb } from '../internal/breadcrumbs/model/breadcrumb';\nimport { Button } from '../internal/button/model/button';\nimport { TextInput } from '../internal/text-input/model/text-input';\nimport { Region } from '../model/region';\nimport { ResponseData } from '../model/response-data';\nimport { RegionalService } from '../service/regional.service';\n\n@Component({\n  selector: 'app-regional',\n  templateUrl: './regional.component.html',\n  styleUrls: ['./regional.component.scss'],\n})\nexport class RegionalComponent {\n  private readonly _breadcrumbs: Breadcrumb[] = [\n    {\n      title: 'Home',\n      routerLink: '/',\n    },\n    {\n      title: 'Regional',\n      routerLink: '/regional',\n      isActive: true,\n    },\n  ];\n  private readonly _postcodeInput: TextInput = {\n    type: 'text',\n    placeholder: 'Enter a postcode',\n    label: 'Postcode',\n    formControlName: 'postcode',\n  };\n  private readonly _submitButton: Button = {\n    type: 'submit',\n    value: 'Submit',\n  };\n  private readonly _cancelButton: Button = {\n    type: 'reset',\n    value: 'Cancel',\n  };\n  postcodeForm: FormGroup;\n\n  constructor(\n    private _regionalService: RegionalService,\n    private _formBuilder: FormBuilder\n  ) {\n    this.postcodeForm = this._formBuilder.group({\n      postcode: ['', Validators.required],\n    });\n  }\n\n  get breadcrumbs(): Breadcrumb[] {\n    return this._breadcrumbs;\n  }\n\n  get postcodeInput(): TextInput {\n    return this._postcodeInput;\n  }\n\n  get submitButton(): Button {\n    return this._submitButton;\n  }\n\n  get cancelButton(): Button {\n    return this._cancelButton;\n  }\n\n  onPostcodeSubmit(): void {\n    this._regionalService\n      .getRegionByPostcode(this.postcodeForm.value.postcode)\n      .subscribe(\n        (response: ResponseData<Region>): void => {\n          console.log(response.data[0].data[0].intensity);\n        },\n        (error: HttpErrorResponse): void => {\n          console.log(error);\n        }\n      );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./regional.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_regionalService",
                        "type": "RegionalService"
                    },
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "_regionalService",
                        "type": "RegionalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "breadcrumbs": {
                    "name": "breadcrumbs",
                    "getSignature": {
                        "name": "breadcrumbs",
                        "type": "[]",
                        "returnType": "Breadcrumb[]",
                        "line": 53
                    }
                },
                "postcodeInput": {
                    "name": "postcodeInput",
                    "getSignature": {
                        "name": "postcodeInput",
                        "type": "",
                        "returnType": "TextInput",
                        "line": 57
                    }
                },
                "submitButton": {
                    "name": "submitButton",
                    "getSignature": {
                        "name": "submitButton",
                        "type": "",
                        "returnType": "Button",
                        "line": 61
                    }
                },
                "cancelButton": {
                    "name": "cancelButton",
                    "getSignature": {
                        "name": "cancelButton",
                        "type": "",
                        "returnType": "Button",
                        "line": 65
                    }
                }
            },
            "templateData": "<app-header></app-header>\n<div class=\"block\">\n  <app-breadcrumbs [breadcrumbs]=\"breadcrumbs\"></app-breadcrumbs>\n</div>\n<div class=\"block\">\n  <form [formGroup]=\"postcodeForm\" (ngSubmit)=\"onPostcodeSubmit()\">\n    <div class=\"field is-grouped\">\n      <div class=\"control\">\n        <app-text-input\n          [textInput]=\"postcodeInput\"\n          [parentForm]=\"postcodeForm\"\n        ></app-text-input>\n      </div>\n      <div class=\"control\">\n        <app-button\n          [button]=\"submitButton\"\n          [parentForm]=\"postcodeForm\"\n        ></app-button>\n      </div>\n      <div class=\"control\">\n        <app-button\n          [button]=\"cancelButton\"\n          [parentForm]=\"postcodeForm\"\n        ></app-button>\n      </div>\n    </div>\n  </form>\n</div>\n"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-b721b1a79f0498c644e74dc23449b6b8",
            "file": "src/app/internal/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-input",
            "styleUrls": [
                "./text-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "parentForm",
                    "defaultValue": "new FormGroup({})",
                    "line": 11,
                    "type": "FormGroup"
                },
                {
                    "name": "textInput",
                    "defaultValue": "{\n    placeholder: '',\n    type: '',\n    label: '',\n    formControlName: '',\n  }",
                    "line": 12,
                    "type": "TextInput"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport type { TextInput } from './model/text-input';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport class TextInputComponent {\n  @Input() parentForm: FormGroup = new FormGroup({});\n  @Input() textInput: TextInput = {\n    placeholder: '',\n    type: '',\n    label: '',\n    formControlName: '',\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./text-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<label [for]=\"textInput.label\" [formGroup]=\"parentForm\">\n  <input\n    class=\"input\"\n    [type]=\"textInput.type\"\n    [placeholder]=\"textInput.placeholder\"\n    [formControlName]=\"textInput.formControlName\"\n  />\n</label>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BreadcrumbsComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "NationalComponent"
                        },
                        {
                            "name": "RegionalComponent"
                        },
                        {
                            "name": "TextInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "BASE_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/config/base-url.const.ts",
                "type": "string",
                "defaultValue": "environment.baseUrl"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "defaultState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/home/home.stories.ts",
                "type": "Story<HomeComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/regional/regional.stories.ts",
                "type": "Story<RegionalComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/national/national.stories.ts",
                "type": "Story<NationalComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/text-input/text-input.stories.ts",
                "type": "Story<TextInputComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/breadcrumbs/breadcrumbs.stories.ts",
                "type": "Story<BreadcrumbsComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/button/button.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "Env",
                "defaultValue": "{\n  production: true,\n  baseUrl: 'https://api.carbonintensity.org.uk',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "Env",
                "defaultValue": "{\n  production: false,\n  baseUrl: 'https://api.carbonintensity.org.uk',\n}"
            },
            {
                "name": "formBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/text-input/text-input.stories.ts",
                "type": "FormBuilder",
                "defaultValue": "new FormBuilder()"
            },
            {
                "name": "REGIONAL_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/config/regional-url.injector.ts",
                "type": "InjectionToken<string>",
                "defaultValue": "new InjectionToken<string>(\n  'REGIONAL_URL',\n  {\n    providedIn: 'root',\n    factory: (): string => BASE_URL + '/regional',\n  }\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/home/home.stories.ts",
                "type": "Story<HomeComponent>",
                "defaultValue": "(\n  args: HomeComponent\n): StoryFnAngularReturnType => ({\n  component: HomeComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/regional/regional.stories.ts",
                "type": "Story<RegionalComponent>",
                "defaultValue": "(\n  args: RegionalComponent\n): StoryFnAngularReturnType => ({\n  component: RegionalComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/national/national.stories.ts",
                "type": "Story<NationalComponent>",
                "defaultValue": "(\n  args: NationalComponent\n): StoryFnAngularReturnType => ({\n  component: NationalComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/text-input/text-input.stories.ts",
                "type": "Story<TextInputComponent>",
                "defaultValue": "(\n  args: TextInputComponent\n): StoryFnAngularReturnType => ({\n  component: TextInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/header/header.stories.ts",
                "type": "Story<AppComponent>",
                "defaultValue": "(\n  args: AppComponent\n): StoryFnAngularReturnType => ({\n  component: AppComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/breadcrumbs/breadcrumbs.stories.ts",
                "type": "Story<BreadcrumbsComponent>",
                "defaultValue": "(\n  args: BreadcrumbsComponent\n): StoryFnAngularReturnType => ({\n  component: BreadcrumbsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/button/button.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(\n  args: ButtonComponent\n): StoryFnAngularReturnType => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "withRouter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/internal/header/header.stories.ts",
                "type": "Story<AppComponent>",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/config/base-url.const.ts": [
                {
                    "name": "BASE_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/config/base-url.const.ts",
                    "type": "string",
                    "defaultValue": "environment.baseUrl"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/home/home.stories.ts": [
                {
                    "name": "defaultState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/home/home.stories.ts",
                    "type": "Story<HomeComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/home/home.stories.ts",
                    "type": "Story<HomeComponent>",
                    "defaultValue": "(\n  args: HomeComponent\n): StoryFnAngularReturnType => ({\n  component: HomeComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/regional/regional.stories.ts": [
                {
                    "name": "defaultState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/regional/regional.stories.ts",
                    "type": "Story<RegionalComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/regional/regional.stories.ts",
                    "type": "Story<RegionalComponent>",
                    "defaultValue": "(\n  args: RegionalComponent\n): StoryFnAngularReturnType => ({\n  component: RegionalComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/national/national.stories.ts": [
                {
                    "name": "defaultState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/national/national.stories.ts",
                    "type": "Story<NationalComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/national/national.stories.ts",
                    "type": "Story<NationalComponent>",
                    "defaultValue": "(\n  args: NationalComponent\n): StoryFnAngularReturnType => ({\n  component: NationalComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/internal/text-input/text-input.stories.ts": [
                {
                    "name": "defaultState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/text-input/text-input.stories.ts",
                    "type": "Story<TextInputComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "formBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/text-input/text-input.stories.ts",
                    "type": "FormBuilder",
                    "defaultValue": "new FormBuilder()"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/text-input/text-input.stories.ts",
                    "type": "Story<TextInputComponent>",
                    "defaultValue": "(\n  args: TextInputComponent\n): StoryFnAngularReturnType => ({\n  component: TextInputComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/internal/breadcrumbs/breadcrumbs.stories.ts": [
                {
                    "name": "defaultState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/breadcrumbs/breadcrumbs.stories.ts",
                    "type": "Story<BreadcrumbsComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/breadcrumbs/breadcrumbs.stories.ts",
                    "type": "Story<BreadcrumbsComponent>",
                    "defaultValue": "(\n  args: BreadcrumbsComponent\n): StoryFnAngularReturnType => ({\n  component: BreadcrumbsComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/internal/button/button.stories.ts": [
                {
                    "name": "defaultState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/button/button.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/button/button.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(\n  args: ButtonComponent\n): StoryFnAngularReturnType => ({\n  component: ButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "Env",
                    "defaultValue": "{\n  production: true,\n  baseUrl: 'https://api.carbonintensity.org.uk',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "Env",
                    "defaultValue": "{\n  production: false,\n  baseUrl: 'https://api.carbonintensity.org.uk',\n}"
                }
            ],
            "src/app/config/regional-url.injector.ts": [
                {
                    "name": "REGIONAL_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/config/regional-url.injector.ts",
                    "type": "InjectionToken<string>",
                    "defaultValue": "new InjectionToken<string>(\n  'REGIONAL_URL',\n  {\n    providedIn: 'root',\n    factory: (): string => BASE_URL + '/regional',\n  }\n)"
                }
            ],
            "src/stories/internal/header/header.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/header/header.stories.ts",
                    "type": "Story<AppComponent>",
                    "defaultValue": "(\n  args: AppComponent\n): StoryFnAngularReturnType => ({\n  component: AppComponent,\n  props: args,\n})"
                },
                {
                    "name": "withRouter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/internal/header/header.stories.ts",
                    "type": "Story<AppComponent>",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/home",
                        "pathMatch": "full"
                    },
                    {
                        "path": "home",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "national",
                        "component": "NationalComponent"
                    },
                    {
                        "path": "regional",
                        "component": "RegionalComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/config/base-url.const.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BASE_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/config/regional-url.injector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "REGIONAL_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/internal/breadcrumbs/breadcrumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/internal/breadcrumbs/model/breadcrumb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/internal/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/internal/button/model/button.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/internal/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/internal/text-input/model/text-input.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TextInput",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/internal/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/model/generation-mix.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GenerationMix",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/model/intensity-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IntensityData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/model/intensity.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Intensity",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/model/region.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Region",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/model/response-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponseData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/national/national.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NationalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/regional/regional.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegionalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/service/regional.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RegionalService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/env.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Env",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/home/home.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/home/home.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/breadcrumbs/breadcrumbs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/breadcrumbs/breadcrumbs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withRouter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/internal/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/national/national.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/national/national.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/regional/regional.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/regional/regional.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}